LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.all;
USE  IEEE.STD_LOGIC_ARITH.all;
USE  IEEE.STD_LOGIC_SIGNED.all;

ENTITY BULLET_FUNCTION IS 
PORT (BULLET_X_POSITION : OUT STD_LOGIC_VECTOR (10 DOWNTO 0);
		MOUSE_COL : IN STD_LOGIC_VECTOR (9 DOWNTO 0);
		MOUSE_CLICK : IN STD_LOGIC;
		FEEDBACK_BULLET :IN STD_LOGIC;
		FIRE : OUT STD_LOGIC );
END BULLET_FUNCTION;


ARCHITECTURE BEHAVIOUR OF BULLET_FUNCTION IS


SIGNAL SET_ENABLE : STD_LOGIC := '0';
SIGNAL X_POSITION : STD_LOGIC := '1';
BEGIN
-- SIGNALS THAT NEED TO BE CHECKED
PROCESS(MOUSE_CLICK, FEEDBACK_BULLET)
BEGIN

IF(MOUSE_CLICK = '1') THEN
	SET_ENABLE <= '1';
	X_POSITION <= '0';
END IF;
--keep setting the bullet position until x_position is set
-- to 0 by the mouse click
IF(X_POSITION = '1') THEN
	BULLET_X_POSITION <= '0' & MOUSE_COL; 
END IF;
-- THIS resets the enable to 0 and so now the player waits for fire signal
IF(FEEDBACK_BULLET = '1') THEN
	SET_ENABLE <= '0';
	X_POSITION <= '1';
END IF;

END PROCESS;
FIRE <= SET_ENABLE;
END BEHAVIOUR;