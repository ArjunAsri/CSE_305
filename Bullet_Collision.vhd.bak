LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.all;
USE  IEEE.STD_LOGIC_ARITH.all;
USE  IEEE.STD_LOGIC_SIGNED.all;

ENTITY BULLET_COLLISION IS 
PORT ( SIGNAL MOUSE_COLUMN,MOUSE_ROW, TANK_COLUMN, TANK_ROW : IN STD_LOGIC_VECTOR (10 DOWNTO 0);
		 SIGNAL ENABLE_OUT : OUT STD_LOGIC );
END BULLET_FUNCTION;


ARCHITECTURE BEHAVIOUR OF BULLET_COLLISION IS

-- SIGNAL t_BULLET_X_POSITION : STD_LOGIC_VECTOR (10 DOWNTO 0) := '0' & MOUSE_COLUMN;
SIGNAL ENABLE_T : STD_LOGIC := '1'; -- SIGNAL IS ENABLED
BEGIN
 
PROCESS(MOUSE_COLUMN, MOUSE_ROW, TANK_COLUMN, TANK_ROW)
BEGIN

IF((MOUSE_COLUMN < (TANK_COLUMN + conv_std_logic_vector(8,11))) and (MOUSE_COLUMN > (TANK_COLUMN - conv_std_logic_vector(8,11)))and
	((MOUSE_COLUMN < (TANK_COLUMN + conv_std_logic_vector(8,11))) and (MOUSE_COLUMN > (TANK_COLUMN - conv_std_logic_vector(8,11))))
 THEN
	enaBLE_T <= '0';
ELSE
	enable_t <= '1';

END PROCESS;

ENABLE <= enable_t;
END BEHAVIOUR;