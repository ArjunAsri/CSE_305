library IEEE;
use  IEEE.STD_LOGIC_1164.all;
use  IEEE.STD_LOGIC_ARITH.all;
use  IEEE.STD_LOGIC_UNSIGNED.all;

ENTITY FONT_SIZE IS
	PORT(	PIXEL_ROW, PIXEL_COLUMN: IN STD_LOGIC_VECTOR (10 DOWNTO 0);
			vert_sync_in : IN STD_LOGIC;
			ENABLE_BITS : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
			SELECTED_PIXEL_ROW_BITS, SELECTED_PIXEL_COLUMN_BITS	: OUT	STD_LOGIC_VECTOR(2 DOWNTO 0);
			
		);
END FONT_SIZE;

architecture Behavior of FONT_SIZE is
SIGNAL PIXEL_ROW : STD_LOGIC_VECTOR(2..0);
SIGNAL PIXEL_COLUMN : STD_LOGIC_VECTOR(2..0);
begin
PROCESS(vert_sync_in) 
BEGIn

IF ( ENABLE_BITS = "00") THEN
	PIXEL_COLUMN <= PIXEL_COLUMN[3..1];
	PIXEL_ROW <= PIXEL_COLUMN[3..1];
ELSIF (ENABLE_BITS = "01") THEN
	PIXEL_COLUMN <= PIXEL_COLUMN[3..1];
	PIXEL_ROW <= PIXEL_COLUMN[3..1];
ELSIF (ENABLE_BITS = "10") THEN
	PIXEL_COLUMN <= PIXEL_COLUMN[4..2];
	PIXEL_ROW <= PIXEL_COLUMN[4..2];	
ELSE
	PIXEL_COLUMN <= PIXEL_COLUMN[5..3];
	PIXEL_ROW <= PIXEL_COLUMN[5..3];	
END IF;
SELECTED_PIXEL_COLUMN_BITS <= PIXEL_COLUMN;
SELECTED_PIXEL_ROW_BITS <= PIXEL_ROW;
end Behavior;